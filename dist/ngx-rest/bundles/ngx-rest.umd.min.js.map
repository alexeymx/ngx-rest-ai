{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-rest/lib/file-upload.service.ts","ng://ngx-rest/lib/file-download.service.ts","ng://ngx-rest/lib/ngx-rest.config.ts","ng://ngx-rest/lib/http-method.enum.ts","ng://ngx-rest/lib/jwt-helper.class.ts","ng://ngx-rest/lib/ngx-rest.service.ts","ng://ngx-rest/lib/ngx-rest.module.ts"],"names":["FileUploadState","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__decorate","decorators","target","key","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","FileDownloadState","FileUpload","http","humanReadableFormat","bytes","e","Math","log","pow","toFixed","calculateSize","files","size","Array","from","forEach","file","createFormData","object","form","namespace","formData","FormData","property","formKey","Date","append","toISOString","FileList","item","File","upload","method","url","options","toLowerCase","indexOf","Error","result","state","total","loaded","progress","Params","listParameterName","res","HttpRequest","params","reportProgress","headers","HttpHeaders","request","pipe","map","event","type","HttpEventType","Sent","initialize","UploadProgress","inProgress","completed","round","Response","filter","val","isNullOrUndefined","distinctUntilChanged","post","put","HttpClient","Injectable","TypeTokenStorage","FileDownload","blobSave","saveAs","data","window","navigator","msSaveOrOpenBlob","url_1","URL","createObjectURL","a_1","document","createElement","body","appendChild","setAttribute","href","download","click","setTimeout","revokeObjectURL","removeChild","HttpParams","Options","keys","set","responseType","DownloadProgress","isUndefined","FileDownload_1","get","HttpMethod","JwtHelper","decodeToken","token","parts","split","decoded","urlBase64Decode","JSON","parse","str","output","atob","decodeURIComponent","RestClientService","cookies","router","config","cancelPending$","Subject","baseHeader","Cache-Control","accept","Pragma","Authorization","Accept-Language","secureRequest","withFilesRequest","endPoint","tokenName","tokenStorage","cookie","secureCookie","mockData","validationTokenUri","authUri","UnauthorizedRedirectUri","setConfig","paramIndex","decorator","getConfig","localStorage","getItem","sessionStorage","expires","fromUnixTime","exp","secure","setItem","revoke","removeAll","removeItem","authorize","username","password","authenticate","_this","tap","payload","validateToken","secured","Post","deauthorize","deauthenticate","Get","isAuthorized","isAfter","isAuthenticated","cancelPendingRequests","next","public","httpOptions","Put","patch","Patch","delete","Delete","withFiles","buildUrl","nUrl","replace","match","buildHeaders","header","language","console","warn","msDelay","floor","random","rType","takeUntil","delay","catchError","err","UnauthenticatedRedirectUri","status","navigate","then","throwError","CookieService","Router","RestServiceConfig","Optional","providedIn","NgxRestModule","forRoot","ngModule","NgxRestModule_1","providers","provide","useValue","NgModule","imports","HttpClientModule","CookieModule","RouterModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpEventType, HttpRequest, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map, distinctUntilChanged, filter } from 'rxjs/operators';\nimport { isNullOrUndefined } from 'util';\n\n/**\n * FileUpload request options structure\n */\nexport interface IUploadOptions {\n    listParameterName?: any;\n    params?: {[key: string]: any};\n    headers?: any;\n}\n\n/**\n * FileUpload request state enum\n */\nexport enum FileUploadState {\n    initialize = 'initialize',\n    inProgress = 'inProgress',\n    completed = 'completed'\n}\n\n@Injectable()\nexport class FileUpload {\n\n    /**\n     * Service class constructor\n     */\n    constructor( private http: HttpClient ) {  }\n\n    /**\n     * Convert bytes size to human readable format\n     */\n    public static humanReadableFormat(bytes: number) {\n        const e = ( Math.log(bytes) / Math.log(1e3) ) | 0;\n        return +(bytes / Math.pow(1e3, e)).toFixed(2) + ' ' + ('kMGTPEZY'[e - 1] || '') + 'B';\n    }\n\n    /**\n     * Convert bytes size to human readable format\n     */\n    public static calculateSize(files: FileList) {\n        let size = 0;\n        Array.from(files).forEach((file) => { size += file.size; });\n        return size;\n    }\n\n    /**\n     * Create a FormData object to be send as request payload data\n     */\n    protected createFormData(object: any, form?: FormData, namespace?: string): FormData {\n        const formData = form || new FormData();\n\n        for (const property in object) {\n\n            if (!object.hasOwnProperty(property) || !object[property]) { continue; }\n\n            const formKey = namespace ? `${namespace}[${property}]` : property;\n            if (object[property] instanceof Date) {\n                formData.append(formKey, object[property].toISOString());\n            } else if ( object[property] instanceof FileList ) {\n                for (let i = 0; i < object[property].length; i++) {\n                    formData.append(`${property}[]`, object[property].item(i));\n                }\n            } else if (\n                typeof object[property] === 'object' && !(object[property] instanceof File)) {\n                this.createFormData(object[property], formData, formKey);\n            } else {\n                formData.append(formKey, object[property]);\n            }\n        }\n        return formData;\n    }\n\n    /**\n     * Upload the file list\n     */\n    private upload( method: string, url: string, files: FileList, options?: IUploadOptions ): Observable<any> {\n        method = method.toLowerCase();\n        if ( [ 'post', 'put' ].indexOf( method ) === -1 ) {\n            throw new Error(`FileUpload: Method \"${ method }\" not allow, use \"POST\" or \"PUT\"`);\n        }\n\n        let result = { state: null, files: files, total: 0, loaded: 0, progress: 0 };\n\n        const Params = {  };\n\n        Params[options.listParameterName ? options.listParameterName : 'files'] = files;\n\n        const res = new HttpRequest(\n            method, url,\n            this.createFormData( options.params ? { ...Params, ...options.params } : Params ),\n            { reportProgress: true, headers: new HttpHeaders(options.headers ? options.headers : {}) }\n        );\n\n        return this.http\n            .request(res)\n            .pipe(\n                map(( event ) => {\n                    switch (event.type) {\n                        case HttpEventType.Sent:\n                            result = { ...result, ...{ state: FileUploadState.initialize } };\n                            break;\n                        case HttpEventType.UploadProgress:\n                            result = {\n                                ...result,\n                                ...{\n                                    state: event.total !== event.loaded ? FileUploadState.inProgress : FileUploadState.completed,\n                                    total: event.total,\n                                    loaded: event.loaded,\n                                    progress: Math.round(100 * event.loaded / event.total)\n                                }\n                            };\n                            break;\n                        case HttpEventType.Response:\n                            if ( result.state !== FileUploadState.completed ) {\n                                result = { ...result, ...{ state: FileUploadState.completed } };\n                            }\n                            break;\n                    }\n                    return result;\n                }),\n                filter((val) => !isNullOrUndefined(val)),\n                distinctUntilChanged()\n            );\n    }\n\n    /**\n     * Upload the files using POST HTTP method\n     */\n    public post( url: string, files: FileList, options?: IUploadOptions ): Observable<any> {\n        return this.upload('post', url, files, options);\n    }\n\n    /**\n     * Upload the files using PUT HTTP method\n     */\n    public put( url: string, files: FileList, options?: IUploadOptions ): Observable<any> {\n        return this.upload('put', url, files, options);\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpEventType, HttpRequest, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map, distinctUntilChanged, filter } from 'rxjs/operators';\nimport { isNullOrUndefined, isUndefined } from 'util';\n\n/**\n * FileDownload request options structure\n */\nexport interface IDownloadOptions {\n    params?: {[key: string]: any};\n    headers?: any;\n}\n\n/**\n * FileDownload request state enum\n */\nexport enum FileDownloadState {\n    initialize = 'initialize',\n    inProgress = 'inProgress',\n    completed = 'completed',\n}\n\n@Injectable()\nexport class FileDownload {\n\n    /**\n     * Service class constructor\n     */\n    constructor( private http: HttpClient ) {  }\n\n    /**\n     * Convert bytes size to human readable format\n     */\n    public static humanReadableFormat(bytes: number) {\n        const e = ( Math.log(bytes) / Math.log(1e3) ) | 0;\n        return +(bytes / Math.pow(1e3, e)).toFixed(2) + ' ' + ('kMGTPEZY'[e - 1] || '') + 'B';\n    }\n\n    /**\n     * Save the Blob data\n     */\n    public static blobSave( saveAs: string, data: any ) {\n\n        if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n            window.navigator.msSaveOrOpenBlob(data, saveAs);\n        } else {\n            const url = window.URL.createObjectURL(data), a = document.createElement('a');\n\n            document.body.appendChild(a);\n            a.setAttribute('style', 'display: none');\n            a.href = url;\n            a.download = saveAs;\n            a.click();\n            setTimeout(() => { window.URL.revokeObjectURL(url); document.body.removeChild(a); }, 400);\n        }\n    }\n\n    /**\n     * Request the file to be downloaded\n     */\n    private download(method: string, url: string, saveAs: string, options: IDownloadOptions = {}): Observable<any> {\n        method = method.toLowerCase();\n        if ( [ 'get', 'post', 'put' ].indexOf( method ) === -1 ) {\n            throw new Error(`FileDownload: Method \"${ method }\" not allow, use \"GET\", \"POST\" or \"PUT\"`);\n        }\n\n        let result = { state: null, saveAs: saveAs, total: 0, loaded: 0, progress: 0 },\n            Params = new HttpParams();\n\n        const Options = {\n            reportProgress: true,\n            headers: new HttpHeaders( options.headers || {})\n        };\n\n        if ( options.params ) {\n            Object.keys(options.params).forEach((key) => { Params = Params.set(key, options.params[key]); });\n        }\n\n        const res = method === 'GET'\n            ? new HttpRequest(method, url, { ...Options, ...{ responseType: 'blob', params: Params } })\n            : new HttpRequest(method, url, options.params || {}, { ...Options, ...{ responseType: 'blob' } });\n\n        return this.http\n            .request(res)\n            .pipe(\n                map(( event ) => {\n                    switch (event.type) {\n                        case HttpEventType.Sent:\n                            result = { ...result, ...{ state: FileDownloadState.initialize } };\n                            break;\n                        case HttpEventType.DownloadProgress:\n                            if ( !isUndefined(event.total) ) {\n                                result = {\n                                    ...result,\n                                    ...{\n                                        state: FileDownloadState.inProgress,\n                                        total: event.total,\n                                        loaded: event.loaded,\n                                        progress: Math.round(100 * event.loaded / event.total)\n                                    }\n                                };\n                            }\n                            break;\n                        case HttpEventType.Response:\n                            if ( result.state !== FileDownloadState.completed ) {\n                                result = { ...result, ...{ state: FileDownloadState.completed } };\n                                FileDownload.blobSave( saveAs, event.body );\n                            }\n                            break;\n                    }\n                    return result;\n                }),\n                filter((val) => !isNullOrUndefined(val)),\n                distinctUntilChanged()\n            );\n    }\n\n    /**\n     * Upload the files using POST HTTP method\n     */\n    public get( url: string, saveAs: string, options: IDownloadOptions = {} ): Observable<any> {\n        return this.download('get', url, saveAs, options);\n    }\n\n    /**\n     * Upload the files using POST HTTP method\n     */\n    public post( url: string, saveAs: string, options: IDownloadOptions = {} ): Observable<any> {\n        return this.download('post', url, saveAs, options);\n    }\n\n    /**\n     * Upload the files using PUT HTTP method\n     */\n    public put( url: string, saveAs: string, options: IDownloadOptions = {} ): Observable<any> {\n        return this.download('put', url, saveAs, options);\n    }\n\n}\n","export enum TypeTokenStorage {\n  cookie = 'cookie',\n  localStorage = 'localStorage',\n  sessionStorage = 'sessionStorage',\n}\n\nexport class RestServiceConfig {\n  public endPoint?: string;\n  public mockData?: boolean;\n  public tokenStorage?: TypeTokenStorage;\n  public tokenName?: string;\n  public secureCookie?: boolean;\n  public language?: string;\n  public authUri?: string;\n  public validationTokenUri?: string;\n  public UnauthorizedRedirectUri?: string;\n  public UnauthenticatedRedirectUri?: string;\n}\n","export enum HttpMethod {\n    Get = 'get',\n    Post = 'post',\n    Put = 'put',\n    Delete = 'selete',\n    Patch = 'patch',\n}\n","import { IJwtPayload } from './jwt-payload.interface';\n\nexport class JwtHelper {\n\n    public static decodeToken(token = ''): IJwtPayload {\n        if (token === null || token === '') {\n            return null;\n        }\n\n        const parts = token.split('.');\n        if (parts.length !== 3) {\n            return null;\n        }\n\n        const decoded = this.urlBase64Decode(parts[1]);\n        if (!decoded) {\n            return null;\n        }\n\n        return JSON.parse(decoded);\n    }\n\n    private static urlBase64Decode(str: string): string {\n        let output = str;\n        switch (output.length % 4) {\n            case 0:\n                break;\n\n            case 2:\n                output += '==';\n                break;\n\n            case 3:\n                output += '=';\n                break;\n\n            default:\n                return null;\n        }\n\n        const data = atob(output);\n\n        return decodeURIComponent(data);\n    }\n\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie';\nimport { Observable, Subject, throwError } from 'rxjs';\nimport { takeUntil, tap, catchError, delay } from 'rxjs/operators';\nimport { isAfter, fromUnixTime } from 'date-fns';\n\nimport { IHttpOptions } from './http-options.interface';\nimport { HttpMethod } from './http-method.enum';\nimport { JwtHelper } from './jwt-helper.class';\nimport { RestServiceConfig, TypeTokenStorage } from './ngx-rest.config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestClientService {\n  /** Handler used to stop all pending requests */\n  protected cancelPending$: Subject<boolean> = new Subject<boolean>();\n\n  /**  Default requests header */\n  protected baseHeader = {\n    'Cache-Control': 'no-cache',\n    accept: 'application/json',\n    Pragma: 'no-cache',\n    Authorization: '',\n    'Accept-Language': '*'\n  };\n\n  /** Service configuration parameters */\n  protected config: RestServiceConfig;\n\n  /** When true, the request header will include the authentication token */\n  protected secureRequest = false;\n\n  /** Holds a list of files to be upload on request */\n  protected withFilesRequest = false;\n\n  constructor(\n    private http: HttpClient,\n    private cookies: CookieService,\n    private readonly router: Router,\n    @Optional() config: RestServiceConfig\n  ) {\n    this.config = {\n      endPoint: '',\n      tokenName: 'AuthToken',\n      tokenStorage: TypeTokenStorage.cookie,\n      secureCookie: false,\n      mockData: false,\n      validationTokenUri: '/info',\n      authUri: '/authenticate',\n      UnauthorizedRedirectUri: null\n    } as RestServiceConfig;\n\n    if (config) {\n      this.setConfig(config);\n    }\n  }\n\n  /**\n   * Set the Rest Client configuration parameters.\n   *\n   * CAUTION: This method overrides the current configuration settings\n   * and this settings will apply to all following requests\n   */\n  public setConfig(config: RestServiceConfig): RestClientService {\n    this.config = { ...this.config, ...config } as RestServiceConfig;\n    return this;\n  }\n\n  /** Return the current Rest Client configuration parameters.  */\n  public getConfig(): RestServiceConfig {\n    return this.config;\n  }\n\n  /**\n   * Get the API Token from cookies\n   */\n  public get token(): string {\n    let token = '';\n\n    switch (this.config.tokenStorage) {\n      case TypeTokenStorage.cookie:\n        token = this.cookies.get(this.config.tokenName);\n        break;\n      case TypeTokenStorage.localStorage:\n        token = localStorage.getItem(this.config.tokenName);\n        break;\n      case TypeTokenStorage.sessionStorage:\n        token = sessionStorage.getItem(this.config.tokenName);\n        break;\n      default:\n        throw new Error('Invalid Token Storage method');\n    }\n\n    return !token || typeof token === 'undefined' ? '' : token;\n  }\n\n  /**\n   * Save the API Token cookie\n   */\n  public set token(token: string) {\n    const decoded = JwtHelper.decodeToken(token);\n    const expires = fromUnixTime(decoded.exp);\n\n    switch (this.config.tokenStorage) {\n      case TypeTokenStorage.cookie:\n        this.cookies.put(\n          this.config.tokenName,\n          token,\n          { secure: this.config.secureCookie, expires }\n        );\n        break;\n      case TypeTokenStorage.localStorage:\n        localStorage.setItem(this.config.tokenName, token);\n        break;\n      case TypeTokenStorage.sessionStorage:\n        sessionStorage.setItem(this.config.tokenName, token);\n        break;\n      default:\n        throw new Error('Invalid Token Storage method');\n    }\n  }\n\n\n  /**\n   * Remove the Authentication token cookie\n   */\n  public revoke(): void {\n    switch (this.config.tokenStorage) {\n      case TypeTokenStorage.cookie:\n        this.cookies.removeAll();\n        break;\n      case TypeTokenStorage.localStorage:\n        localStorage.removeItem(this.config.tokenName);\n        break;\n      case TypeTokenStorage.sessionStorage:\n        sessionStorage.removeItem(this.config.tokenName);\n        break;\n      default:\n        throw new Error('Invalid Token Storage method');\n    }\n  }\n\n  /**\n   * Request an Authorization token\n   * The default authorization URI is '[API_END_POINT]/authorize'\n   * @param username Username\n   * @param password Password\n   * @deprecated Use `authenticate` method instead\n   */\n  public authorize(username: string, password: string): Observable<any> {\n    return this.authenticate(username, password);\n  }\n\n  /**\n   * Request an authentication token\n   * The default authentication URI is '[API_END_POINT]/authenticate'\n   * @param username Username\n   * @param password Password\n   */\n  public authenticate(username: string, password: string): Observable<any> {\n    return this.post(this.config.authUri, { username, password })\n      .pipe(\n        tap(payload => {\n          this.token = payload;\n        })\n      );\n  }\n\n  /** Validate the Authentication token against the API */\n  public validateToken(url: string): Observable<any> {\n    return this.secured().request(HttpMethod.Post, url);\n  }\n\n  /**\n   * Removes authorization token\n   * @param url a url to report to\n   * @deprecated use `deauthenticate` method instead\n   */\n  public deauthorize(url: string): Observable<any> {\n    return this.deauthenticate(url);\n  }\n\n  /**\n   * Removes authorization token and reports logout to the server\n   * @param url a url to report to\n   */\n  public deauthenticate(url: string): Observable<any> {\n    return this.secured().request(HttpMethod.Get, url)\n      .pipe(\n        tap(() => {\n          this.revoke();\n        })\n      );\n  }\n\n  /**\n   * Check if the client is already authenticated\n   * @deprecated use `isAuthenticated` method instead\n   */\n  public isAuthorized(): boolean {\n    const token = this.token;\n    const decoded = JwtHelper.decodeToken(token);\n    return decoded !== null && !isAfter(new Date(), fromUnixTime(decoded.exp));\n  }\n\n  /**\n   * Check if the client is already authenticated\n   */\n  public isAuthenticated(): boolean {\n    const token = this.token;\n    const decoded = JwtHelper.decodeToken(token);\n    return decoded !== null && !isAfter(new Date(), fromUnixTime(decoded.exp));\n  }\n\n  /** Cancel all pending requests */\n  public cancelPendingRequests(): void {\n    this.cancelPending$.next(true);\n  }\n\n  /**\n   * Set the request mode to SECURED for the next request.\n   *\n   * Secured Mode force the next request to include the authentication token.\n   * The token must be requested previously using the \"authorize\" method.\n   */\n  public secured(): RestClientService {\n    this.secureRequest = true;\n\n    return this;\n  }\n\n  /**\n   * Set the request mode to PUBLIC for the next request.\n   *\n   * Public is the default request mode and ensure that no authentication token\n   * will be pass on the next request.\n   */\n  public public(): RestClientService {\n    this.secureRequest = false;\n\n    return this;\n  }\n\n  /**\n   * API request using GET method\n   *\n   * @param url\n   * @param data A list of parametes\n   */\n  public get(url: string, data?: {}): Observable<any> {\n    return this.request(HttpMethod.Get, url, data);\n  }\n\n  /**\n   * API request using POST method\n   *\n   * @param url\n   * @param data\n   * @param responseType\n   * @param httpOptions\n   */\n  public post(url: string, data?: {}, responseType?: string, httpOptions: IHttpOptions = {}): Observable<any> {\n    return this.request(HttpMethod.Post, url, data, responseType, httpOptions);\n  }\n\n  /**\n   * API request using PUT method\n   *\n   * @param url\n   * @param data\n   * @param responseType\n   * @param httpOptions\n   */\n  public put(url: string, data?: {}, responseType?: string, httpOptions: IHttpOptions = {}): Observable<any> {\n    return this.request(HttpMethod.Put, url, data, responseType, httpOptions);\n  }\n\n  /**\n   * API request using PATCH method\n   *\n   * @param url\n   * @param data\n   * @param responseType\n   * @param httpOptions\n   */\n  public patch(url: string, data?: {}, responseType?: string, httpOptions: IHttpOptions = {}): Observable<any> {\n    return this.request(HttpMethod.Patch, url, data, responseType, httpOptions);\n  }\n\n  /**\n   * API request using DELETE method\n   *\n   * @param url\n   * @param data\n   * @param responseType\n   */\n  public delete(url: string, data?: {}, responseType?: string): Observable<any> {\n    return this.request(HttpMethod.Delete, url, data, responseType);\n  }\n\n  /** Set the upload file mode */\n  public withFiles(): RestClientService {\n    this.withFilesRequest = true;\n\n    return this;\n  }\n\n  /**\n   * Create a FormData object to be send as request payload data\n   */\n  protected createFormData(object: any, form?: FormData, namespace?: string): FormData {\n    const formData = form || new FormData();\n\n    for (const property in object) {\n\n      if (!object.hasOwnProperty(property) || !object[property]) { continue; }\n\n      const formKey = namespace ? `${namespace}[${property}]` : property;\n      if (object[property] instanceof Date) {\n        formData.append(formKey, object[property].toISOString());\n      } else if (object[property] instanceof FileList) {\n        for (let i = 0; i < object[property].length; i++) {\n          formData.append(`${property}[]`, object[property].item(i));\n        }\n      } else if (\n        typeof object[property] === 'object' && !(object[property] instanceof File)) {\n        this.createFormData(object[property], formData, formKey);\n      } else {\n        formData.append(formKey, object[property]);\n      }\n    }\n    return formData;\n  }\n\n\n\n  protected buildUrl(url: string): string {\n    const endPoint = this.config.mockData ? 'assets/mock-data' : this.config.endPoint.replace(/\\/$/, '');\n\n    let nUrl = `${endPoint}/${url.replace(/^\\//g, '')}`;\n    const match = nUrl.match(/\\.([0-9a-z]+)(?:[\\?#]|$)/i);\n\n    if (this.config.mockData && match == null) {\n      nUrl = `${nUrl}.json`;\n    }\n\n    return nUrl;\n  }\n\n\n  /**\n   * Return the request headers based on configuration parameters\n   */\n  private buildHeaders() {\n    const header = { ...this.baseHeader };\n\n    if (this.config.language) { header['Accept-Language'] = this.config.language; }\n\n    if (this.secureRequest) {\n      const token = this.token;\n      if (!token) {\n        console.warn(\n          'Executing a secure request without TOKEN. '\n          + 'Authorization header will not be set!'\n        );\n      } else {\n        header.Authorization = `Bearer ${token}`;\n      }\n\n      this.secureRequest = false;\n    }\n\n    return header;\n  }\n\n\n\n  /** Raw request method */\n  protected request(\n    method: HttpMethod, url: string, data?: any, responseType?: string,\n    httpOptions: IHttpOptions = {}\n  ): Observable<any> {\n    const msDelay = Math.floor((Math.random() * 2000) + 1000);\n    const header = this.buildHeaders();\n\n    const rType = (responseType ? responseType : 'json') as 'text';\n\n    if (this.withFilesRequest) { data = this.createFormData(data); this.withFilesRequest = false; }\n\n    const options = {\n      body: method === HttpMethod.Get ? {} : data,\n      responseType: rType,\n      params: method === HttpMethod.Get ? data : {},\n      headers: header\n    };\n\n    return this.http\n      .request(\n        this.config.mockData ? HttpMethod.Get : method, this.buildUrl(url),\n        { ...options, ...httpOptions }\n      )\n      .pipe(takeUntil(this.cancelPending$))\n      .pipe(delay(this.config.mockData ? msDelay : 0))\n      .pipe(catchError((err) => {\n        if (\n          this.config.UnauthenticatedRedirectUri\n          && url !== this.config.authUri\n          && err.status === 401\n        ) {\n          this.router.navigate([this.config.UnauthenticatedRedirectUri]).then(() => { });\n          this.cancelPendingRequests();\n        }\n\n        if (\n          this.config.UnauthorizedRedirectUri\n          && url !== this.config.authUri\n          && err.status === 403\n        ) {\n          this.router.navigate([this.config.UnauthorizedRedirectUri]).then(() => { });\n          this.cancelPendingRequests();\n        }\n        return throwError(err);\n      }));\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { CookieModule, CookieService } from 'ngx-cookie';\n\nimport { RestServiceConfig } from './ngx-rest.config';\nimport { FileDownload } from './file-download.service';\nimport { FileUpload } from './file-upload.service';\n\n@NgModule({\n  imports: [\n    HttpClientModule,\n    CookieModule.forRoot()\n  ],\n  providers: [\n    HttpClient,\n    CookieService,\n    FileDownload,\n    FileUpload,\n    RouterModule\n  ]\n})\nexport class NgxRestModule {\n  public static forRoot(config?: RestServiceConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxRestModule,\n      providers: [\n        { provide: RestServiceConfig, useValue: config }\n      ]\n    };\n  }\n}\n"]}